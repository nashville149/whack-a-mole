{"ast":null,"code":"var _jsxFileName = \"/home/nashvile/Project/whack-game/src/Components/Pause.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GameTimer from \"./Gametimer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [paused, setPaused] = useState(true);\n  const [showMenu, setShowMenu] = useState(true);\n  const [resetKey, setResetKey] = useState(0);\n  const [started, setStarted] = useState(false); // Track if timer has ever started\n\n  function handleStart() {\n    setPaused(false);\n    setShowMenu(false);\n    setStarted(true);\n  }\n  function handleResume() {\n    setPaused(false);\n    setShowMenu(false);\n  }\n  function handlePause() {\n    setPaused(true);\n    setShowMenu(true);\n  }\n  function handleRestart() {\n    setResetKey(prev => prev + 1);\n    setPaused(false);\n    setShowMenu(false);\n    setStarted(true);\n  }\n  function handleTimeUp() {\n    setPaused(true);\n    setShowMenu(true);\n    alert(\"Time is up!\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(GameTimer, {\n      startTime: 30,\n      paused: paused,\n      resetTrigger: resetKey,\n      onTimeUp: handleTimeUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), showMenu ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: started ? \"Timer Paused\" : \"Timer Ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), !started ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResume,\n          children: \"Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestart,\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePause,\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n_s(Game, \"VQ7WixBL9Du8nd3MLoJVHYpee+U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","GameTimer","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","paused","setPaused","showMenu","setShowMenu","resetKey","setResetKey","started","setStarted","handleStart","handleResume","handlePause","handleRestart","prev","handleTimeUp","alert","style","textAlign","marginTop","children","startTime","resetTrigger","onTimeUp","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/home/nashvile/Project/whack-game/src/Components/Pause.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport GameTimer from \"./Gametimer\";\n\n\nfunction Game() {\n    const [paused, setPaused] = useState(true);\n    const [showMenu, setShowMenu] = useState(true);\n    const [resetKey, setResetKey] = useState(0);\n    const [started, setStarted] = useState(false); // Track if timer has ever started\n  \n    function handleStart() {\n      setPaused(false);\n      setShowMenu(false);\n      setStarted(true);\n    }\n  \n    function handleResume() {\n      setPaused(false);\n      setShowMenu(false);\n    }\n  \n    function handlePause() {\n      setPaused(true);\n      setShowMenu(true);\n    }\n  \n    function handleRestart() {\n      setResetKey((prev) => prev + 1);\n      setPaused(false);\n      setShowMenu(false);\n      setStarted(true);\n    }\n  \n    function handleTimeUp() {\n      setPaused(true);\n      setShowMenu(true);\n      alert(\"Time is up!\");\n    }\n  \n    return (\n      <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n        <GameTimer\n          startTime={30}\n          paused={paused}\n          resetTrigger={resetKey}\n          onTimeUp={handleTimeUp}\n        />\n  \n        {showMenu ? (\n          <div style={{ marginTop: \"20px\" }}>\n            <h2>{started ? \"Timer Paused\" : \"Timer Ready\"}</h2>\n            {!started ? (\n              <button onClick={handleStart}>Start</button>\n            ) : (\n              <>\n                <button onClick={handleResume}>Resume</button>\n                <button onClick={handleRestart} style={{ marginLeft: \"10px\" }}>\n                  Restart\n                </button>\n              </>\n            )}\n          </div>\n        ) : (\n          <button onClick={handlePause} style={{ marginTop: \"20px\" }}>\n            Pause\n          </button>\n        )}\n      </div>\n    );\n  }\n  \n  export default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}