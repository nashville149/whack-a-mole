{"ast":null,"code":"var _jsxFileName = \"/home/nashvile/Project/whack-game/src/Components/GamePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameTimer from './GameTimer';\nimport moleImg from '../public/CuteMole.png';\nimport hammerCursor from '../public/hammer.png';\nimport './GamePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s();\n  const [holes, setHoles] = useState(Array(9).fill(false));\n  const [paused, setPaused] = useState(false);\n  const [resetTrigger, setResetTrigger] = useState(0);\n\n  // Mole popping effect\n  useEffect(() => {\n    if (paused) return;\n    const interval = setInterval(() => {\n      const newHoles = Array(9).fill(false);\n      const randomIndex = Math.floor(Math.random() * 9);\n      newHoles[randomIndex] = true;\n      setHoles(newHoles);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [paused]);\n\n  // Whack handler\n  const handleWhack = index => {\n    if (holes[index]) {\n      alert(`Whacked mole at hole #${index + 1}!`);\n      const newHoles = [...holes];\n      newHoles[index] = false;\n      setHoles(newHoles);\n    }\n  };\n\n  // Time up handler\n  const onTimeUp = () => {\n    alert('Time is up! Game over.');\n    setPaused(true);\n  };\n\n  // Pause toggle\n  const togglePause = () => {\n    setPaused(prev => !prev);\n  };\n\n  // Restart game\n  const restartGame = () => {\n    setResetTrigger(prev => prev + 1);\n    setPaused(false);\n    setHoles(Array(9).fill(false));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        className: \"home-button\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePause,\n        className: \"pause\",\n        children: paused ? 'Resume' : 'Pause'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"WHACK-A-MOLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameTimer, {\n      startTime: 30,\n      paused: paused,\n      onTimeUp: onTimeUp,\n      resetTrigger: resetTrigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      style: {\n        cursor: `url(${hammerCursor}), auto`\n      },\n      children: holes.map((isVisible, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hole\",\n        onClick: () => handleWhack(index),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: moleImg,\n          alt: \"Mole\",\n          className: `mole ${isVisible ? 'up' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"3bMWXTHBkDQYyaZQ2ZvPT0k/Hio=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","GameTimer","moleImg","hammerCursor","jsxDEV","_jsxDEV","GamePage","_s","holes","setHoles","Array","fill","paused","setPaused","resetTrigger","setResetTrigger","interval","setInterval","newHoles","randomIndex","Math","floor","random","clearInterval","handleWhack","index","alert","onTimeUp","togglePause","prev","restartGame","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","startTime","style","cursor","map","isVisible","src","alt","_c","$RefreshReg$"],"sources":["/home/nashvile/Project/whack-game/src/Components/GamePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GameTimer from './GameTimer';\nimport moleImg from '../public/CuteMole.png';\nimport hammerCursor from '../public/hammer.png';\nimport './GamePage.css';\n\nfunction GamePage() {\n  const [holes, setHoles] = useState(Array(9).fill(false));\n  const [paused, setPaused] = useState(false);\n  const [resetTrigger, setResetTrigger] = useState(0);\n\n  // Mole popping effect\n  useEffect(() => {\n    if (paused) return;\n    const interval = setInterval(() => {\n      const newHoles = Array(9).fill(false);\n      const randomIndex = Math.floor(Math.random() * 9);\n      newHoles[randomIndex] = true;\n      setHoles(newHoles);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [paused]);\n\n  // Whack handler\n  const handleWhack = (index) => {\n    if (holes[index]) {\n      alert(`Whacked mole at hole #${index + 1}!`);\n      const newHoles = [...holes];\n      newHoles[index] = false;\n      setHoles(newHoles);\n    }\n  };\n\n  // Time up handler\n  const onTimeUp = () => {\n    alert('Time is up! Game over.');\n    setPaused(true);\n  };\n\n  // Pause toggle\n  const togglePause = () => {\n    setPaused((prev) => !prev);\n  };\n\n  // Restart game\n  const restartGame = () => {\n    setResetTrigger((prev) => prev + 1);\n    setPaused(false);\n    setHoles(Array(9).fill(false));\n  };\n\n  return (\n    <div className=\"game-container\">\n      <header className=\"game-header\">\n        <button onClick={restartGame} className=\"home-button\">Restart</button>\n        <button onClick={togglePause} className=\"pause\">\n          {paused ? 'Resume' : 'Pause'}\n        </button>\n      </header>\n\n      <h1 className=\"game-title\">WHACK-A-MOLE</h1>\n\n      <GameTimer startTime={30} paused={paused} onTimeUp={onTimeUp} resetTrigger={resetTrigger} />\n\n      <div className=\"grid\" style={{ cursor: `url(${hammerCursor}), auto` }}>\n        {holes.map((isVisible, index) => (\n          <div key={index} className=\"hole\" onClick={() => handleWhack(index)}>\n            <img src={moleImg} alt=\"Mole\" className={`mole ${isVisible ? 'up' : ''}`} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GamePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}