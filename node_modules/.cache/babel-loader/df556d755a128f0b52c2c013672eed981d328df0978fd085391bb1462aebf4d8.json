{"ast":null,"code":"var _jsxFileName = \"/home/wycliff/documents/react/whack-a-mole/src/Components/Gametimer.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const GameTimer = ({ startTime = 30, paused, onTimeUp, resetTrigger }) => {\n//   const [timeLeft, setTimeLeft] = useState(startTime);\n//   const [isRunning, setIsRunning] = useState(false);\n\n//   useEffect(() => {\n//     let timer;\n\n//     if (!paused && timeLeft > 0) {\n//       setIsRunning(true);\n//       timer = setInterval(() => {\n//         setTimeLeft((prevTime) => prevTime - 1);\n//       }, 1000);\n//     }\n\n//     if (timeLeft === 0 && isRunning) {\n//       setIsRunning(false);\n//       if (onTimeUp) onTimeUp();\n//     }\n\n//     return () => clearInterval(timer);\n//   }, [paused, timeLeft, isRunning, onTimeUp]);\n\n//   useEffect(() => {\n//     setTimeLeft(startTime);\n//     setIsRunning(false);\n//   }, [resetTrigger, startTime]);\n\n//   return (\n//     <div className=\"game-timer\">\n//       <h2>Time Left: {timeLeft} seconds</h2>\n//     </div>\n//   );\n// };\n\n// export default GameTimer;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameTimer = ({\n  startTime = 30,\n  paused,\n  onTimeUp,\n  resetTrigger\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(startTime);\n  useEffect(() => {\n    let timer;\n\n    //     if (!paused && timeLeft > 0) {\n    //       timer = setInterval(() => {\n    //         setTimeLeft((prevTime) => prevTime - 1);\n    //       }, 1000);\n    //     }\n\n    if (paused || timeLeft === 0) {\n      clearInterval(timer);\n    }\n    if (timeLeft === 0 && !paused) {\n      onTimeUp(); // call time up only when not paused and hits zero\n    }\n    return () => clearInterval(timer);\n  }, [paused, timeLeft, onTimeUp]);\n  useEffect(() => {\n    setTimeLeft(startTime);\n  }, [resetTrigger, startTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-timer\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Left: \", timeLeft, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 6\n  }, this);\n};\n_s(GameTimer, \"PUnh8p5D2pcikQymsYHAnvaXJr4=\");\n_c = GameTimer;\nexport default GameTimer;\n\n// import React, { useState, useEffect } from 'react';\n\n// const GameTimer = ({ startTime = 30, paused, onTimeUp, resetTrigger }) => {\n//   const [timeLeft, setTimeLeft] = useState(startTime);\n\n//   useEffect(() => {\n//     let timer;\n\n//     if (!paused && timeLeft > 0) {\n//       timer = setInterval(() => {\n//         setTimeLeft((prevTime) => prevTime - 1);\n//       }, 1000);\n//     }\n\n//     if (paused || timeLeft === 0) {\n//       clearInterval(timer);\n//     }\n\n//     if (timeLeft === 0 && !paused) {\n//       onTimeUp(); // call time up only when not paused and hits zero\n//     }\n\n//     return () => clearInterval(timer);\n//   }, [paused, timeLeft, onTimeUp]);\n\n//   useEffect(() => {\n//     setTimeLeft(startTime);\n//   }, [resetTrigger, startTime]);\n\n//   return (\n//     <div className=\"game-timer\">\n//       <h2>Time Left: {timeLeft} seconds</h2>\n//     </div>\n//   );\n// };\n\n// export default GameTimer;\nvar _c;\n$RefreshReg$(_c, \"GameTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GameTimer","startTime","paused","onTimeUp","resetTrigger","_s","timeLeft","setTimeLeft","timer","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/wycliff/documents/react/whack-a-mole/src/Components/Gametimer.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const GameTimer = ({ startTime = 30, paused, onTimeUp, resetTrigger }) => {\n//   const [timeLeft, setTimeLeft] = useState(startTime);\n//   const [isRunning, setIsRunning] = useState(false);\n\n//   useEffect(() => {\n//     let timer;\n\n//     if (!paused && timeLeft > 0) {\n//       setIsRunning(true);\n//       timer = setInterval(() => {\n//         setTimeLeft((prevTime) => prevTime - 1);\n//       }, 1000);\n//     }\n\n//     if (timeLeft === 0 && isRunning) {\n//       setIsRunning(false);\n//       if (onTimeUp) onTimeUp();\n//     }\n\n//     return () => clearInterval(timer);\n//   }, [paused, timeLeft, isRunning, onTimeUp]);\n\n//   useEffect(() => {\n//     setTimeLeft(startTime);\n//     setIsRunning(false);\n//   }, [resetTrigger, startTime]);\n\n//   return (\n//     <div className=\"game-timer\">\n//       <h2>Time Left: {timeLeft} seconds</h2>\n//     </div>\n//   );\n// };\n\n// export default GameTimer;\n\n\n\n\n\n import React, { useState, useEffect } from 'react';\n\n const GameTimer = ({ startTime = 30, paused, onTimeUp, resetTrigger }) => {\n   const [timeLeft, setTimeLeft] = useState(startTime);\n\n   useEffect(() => {\n     let timer;\n\n//     if (!paused && timeLeft > 0) {\n//       timer = setInterval(() => {\n//         setTimeLeft((prevTime) => prevTime - 1);\n//       }, 1000);\n//     }\n\n     if (paused || timeLeft === 0) {\n       clearInterval(timer);\n     }\n\n     if (timeLeft === 0 && !paused) {\n       onTimeUp(); // call time up only when not paused and hits zero\n     }\n\n     return () => clearInterval(timer);\n   }, [paused, timeLeft, onTimeUp]);\n\n   useEffect(() => {\n     setTimeLeft(startTime);\n   }, [resetTrigger, startTime]);\n\n   return (\n     <div className=\"game-timer\">\n       <h2>Time Left: {timeLeft} seconds</h2>\n     </div>\n   );\n };\n\n export default GameTimer;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n\n// const GameTimer = ({ startTime = 30, paused, onTimeUp, resetTrigger }) => {\n//   const [timeLeft, setTimeLeft] = useState(startTime);\n\n//   useEffect(() => {\n//     let timer;\n\n//     if (!paused && timeLeft > 0) {\n//       timer = setInterval(() => {\n//         setTimeLeft((prevTime) => prevTime - 1);\n//       }, 1000);\n//     }\n\n//     if (paused || timeLeft === 0) {\n//       clearInterval(timer);\n//     }\n\n//     if (timeLeft === 0 && !paused) {\n//       onTimeUp(); // call time up only when not paused and hits zero\n//     }\n\n//     return () => clearInterval(timer);\n//   }, [paused, timeLeft, onTimeUp]);\n\n//   useEffect(() => {\n//     setTimeLeft(startTime);\n//   }, [resetTrigger, startTime]);\n\n//   return (\n//     <div className=\"game-timer\">\n//       <h2>Time Left: {timeLeft} seconds</h2>\n//     </div>\n//   );\n// };\n\n// export default GameTimer;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMC,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,SAAS,GAAG,EAAE;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACK,SAAS,CAAC;EAEnDJ,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK;;IAEd;IACA;IACA;IACA;IACA;;IAEK,IAAIN,MAAM,IAAII,QAAQ,KAAK,CAAC,EAAE;MAC5BG,aAAa,CAACD,KAAK,CAAC;IACtB;IAEA,IAAIF,QAAQ,KAAK,CAAC,IAAI,CAACJ,MAAM,EAAE;MAC7BC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd;IAEA,OAAO,MAAMM,aAAa,CAACD,KAAK,CAAC;EACnC,CAAC,EAAE,CAACN,MAAM,EAAEI,QAAQ,EAAEH,QAAQ,CAAC,CAAC;EAEhCN,SAAS,CAAC,MAAM;IACdU,WAAW,CAACN,SAAS,CAAC;EACxB,CAAC,EAAE,CAACG,YAAY,EAAEH,SAAS,CAAC,CAAC;EAE7B,oBACEF,OAAA;IAAKW,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBZ,OAAA;MAAAY,QAAA,GAAI,aAAW,EAACL,QAAQ,EAAC,UAAQ;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACV,EAAA,CAhCIL,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAkCf,eAAeA,SAAS;;AAKzB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}