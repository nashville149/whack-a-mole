{"ast":null,"code":"var _jsxFileName = \"/home/wycliff/documents/react/whack-a-mole/src/Components/GamePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport GameBoard from \"./GameBoard\";\nimport GameTimer from \"./Gametimer\";\nimport \"./GamePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const level = queryParams.get(\"level\") || \"medium\";\n\n  // 🐇 Controls the mole speed only\n  const getSpeed = () => {\n    switch (level) {\n      case \"easy\":\n        return 1200;\n      // slower\n      case \"hard\":\n        return 500;\n      // faster\n      default:\n        return 800;\n      // medium\n    }\n  };\n  const moleCount = 9; // 🕳️ Keep fixed number of holes\n\n  const [paused, setPaused] = useState(true);\n  const [resetKey, setResetKey] = useState(0);\n  const [moles, setMoles] = useState(Array(moleCount).fill(false));\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    if (!paused) {\n      const interval = setInterval(() => {\n        const newMoles = Array(moleCount).fill(false);\n        const index = Math.floor(Math.random() * moleCount);\n        newMoles[index] = true;\n        setMoles(newMoles);\n      }, getSpeed()); // ⏱️ Use speed here\n      return () => clearInterval(interval);\n    } else {\n      setMoles(Array(moleCount).fill(false));\n    }\n  }, [paused, resetKey, level]); // add `level` so speed changes on difficulty\n\n  const handleWhack = index => {\n    if (moles[index]) {\n      setScore(score + 1);\n      const updated = [...moles];\n      updated[index] = false;\n      setMoles(updated);\n    }\n  };\n  const handleTimeUp = () => {\n    setPaused(true);\n    localStorage.setItem('highScore', Math.max(score, getHighScore()));\n    alert(`Time is up! Your score: ${score}`);\n  };\n  const getHighScore = () => parseInt(localStorage.getItem('highScore')) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level: \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameTimer, {\n      startTime: 30,\n      paused: paused,\n      onTimeUp: handleTimeUp,\n      resetTrigger: resetKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      moles: moles,\n      handleWhack: handleWhack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPaused(!paused),\n        children: paused ? \"Resume\" : \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setResetKey(resetKey + 1);\n          setScore(0);\n          setPaused(false);\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"1gugbV/qBVBy1jTvN/cIKazDBVo=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","GameBoard","GameTimer","jsxDEV","_jsxDEV","GamePage","_s","navigate","location","queryParams","URLSearchParams","search","level","get","getSpeed","moleCount","paused","setPaused","resetKey","setResetKey","moles","setMoles","Array","fill","score","setScore","interval","setInterval","newMoles","index","Math","floor","random","clearInterval","handleWhack","updated","handleTimeUp","localStorage","setItem","max","getHighScore","alert","parseInt","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startTime","onTimeUp","resetTrigger","onClick","_c","$RefreshReg$"],"sources":["/home/wycliff/documents/react/whack-a-mole/src/Components/GamePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport GameBoard from \"./GameBoard\";\nimport GameTimer from \"./Gametimer\";\nimport \"./GamePage.css\";\n\nfunction GamePage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const level = queryParams.get(\"level\") || \"medium\";\n\n  // 🐇 Controls the mole speed only\n  const getSpeed = () => {\n    switch (level) {\n      case \"easy\": return 1200;  // slower\n      case \"hard\": return 500;   // faster\n      default: return 800;       // medium\n    }\n  };\n\n  const moleCount = 9; // 🕳️ Keep fixed number of holes\n\n  const [paused, setPaused] = useState(true);\n  const [resetKey, setResetKey] = useState(0);\n  const [moles, setMoles] = useState(Array(moleCount).fill(false));\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    if (!paused) {\n      const interval = setInterval(() => {\n        const newMoles = Array(moleCount).fill(false);\n        const index = Math.floor(Math.random() * moleCount);\n        newMoles[index] = true;\n        setMoles(newMoles);\n      }, getSpeed()); // ⏱️ Use speed here\n      return () => clearInterval(interval);\n    } else {\n      setMoles(Array(moleCount).fill(false));\n    }\n  }, [paused, resetKey, level]); // add `level` so speed changes on difficulty\n\n  const handleWhack = (index) => {\n    if (moles[index]) {\n      setScore(score + 1);\n      const updated = [...moles];\n      updated[index] = false;\n      setMoles(updated);\n    }\n  };\n\n  const handleTimeUp = () => {\n    setPaused(true);\n    localStorage.setItem('highScore', Math.max(score, getHighScore()));\n    alert(`Time is up! Your score: ${score}`);\n  };\n\n  const getHighScore = () => parseInt(localStorage.getItem('highScore')) || 0;\n\n  return (\n    <div className=\"game-container\">\n      <h2>Level: {level}</h2>\n      <h2>Score: {score}</h2>\n      <GameTimer\n        startTime={30}\n        paused={paused}\n        onTimeUp={handleTimeUp}\n        resetTrigger={resetKey}\n      />\n\n      <GameBoard moles={moles} handleWhack={handleWhack} />\n\n      <div className=\"game-controls\">\n        <button onClick={() => setPaused(!paused)}>{paused ? \"Resume\" : \"Pause\"}</button>\n        <button onClick={() => {\n          setResetKey(resetKey + 1);\n          setScore(0);\n          setPaused(false);\n        }}>Restart</button>\n        <button onClick={() => navigate(\"/\")}>Home</button>\n      </div>\n    </div>\n  );\n}\n\nexport default GamePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,KAAK,GAAGH,WAAW,CAACI,GAAG,CAAC,OAAO,CAAC,IAAI,QAAQ;;EAElD;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,QAAQF,KAAK;MACX,KAAK,MAAM;QAAE,OAAO,IAAI;MAAG;MAC3B,KAAK,MAAM;QAAE,OAAO,GAAG;MAAI;MAC3B;QAAS,OAAO,GAAG;MAAQ;IAC7B;EACF,CAAC;EAED,MAAMG,SAAS,GAAG,CAAC,CAAC,CAAC;;EAErB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAACyB,KAAK,CAACP,SAAS,CAAC,CAACQ,IAAI,CAAC,KAAK,CAAC,CAAC;EAChE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACkB,MAAM,EAAE;MACX,MAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC,MAAMC,QAAQ,GAAGN,KAAK,CAACP,SAAS,CAAC,CAACQ,IAAI,CAAC,KAAK,CAAC;QAC7C,MAAMM,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGjB,SAAS,CAAC;QACnDa,QAAQ,CAACC,KAAK,CAAC,GAAG,IAAI;QACtBR,QAAQ,CAACO,QAAQ,CAAC;MACpB,CAAC,EAAEd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MAChB,OAAO,MAAMmB,aAAa,CAACP,QAAQ,CAAC;IACtC,CAAC,MAAM;MACLL,QAAQ,CAACC,KAAK,CAACP,SAAS,CAAC,CAACQ,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAACP,MAAM,EAAEE,QAAQ,EAAEN,KAAK,CAAC,CAAC,CAAC,CAAC;;EAE/B,MAAMsB,WAAW,GAAIL,KAAK,IAAK;IAC7B,IAAIT,KAAK,CAACS,KAAK,CAAC,EAAE;MAChBJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACnB,MAAMW,OAAO,GAAG,CAAC,GAAGf,KAAK,CAAC;MAC1Be,OAAO,CAACN,KAAK,CAAC,GAAG,KAAK;MACtBR,QAAQ,CAACc,OAAO,CAAC;IACnB;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBnB,SAAS,CAAC,IAAI,CAAC;IACfoB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAER,IAAI,CAACS,GAAG,CAACf,KAAK,EAAEgB,YAAY,CAAC,CAAC,CAAC,CAAC;IAClEC,KAAK,CAAC,2BAA2BjB,KAAK,EAAE,CAAC;EAC3C,CAAC;EAED,MAAMgB,YAAY,GAAGA,CAAA,KAAME,QAAQ,CAACL,YAAY,CAACM,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;EAE3E,oBACEvC,OAAA;IAAKwC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzC,OAAA;MAAAyC,QAAA,GAAI,SAAO,EAACjC,KAAK;IAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvB7C,OAAA;MAAAyC,QAAA,GAAI,SAAO,EAACrB,KAAK;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvB7C,OAAA,CAACF,SAAS;MACRgD,SAAS,EAAE,EAAG;MACdlC,MAAM,EAAEA,MAAO;MACfmC,QAAQ,EAAEf,YAAa;MACvBgB,YAAY,EAAElC;IAAS;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEF7C,OAAA,CAACH,SAAS;MAACmB,KAAK,EAAEA,KAAM;MAACc,WAAW,EAAEA;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErD7C,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzC,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAMpC,SAAS,CAAC,CAACD,MAAM,CAAE;QAAA6B,QAAA,EAAE7B,MAAM,GAAG,QAAQ,GAAG;MAAO;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACjF7C,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAM;UACrBlC,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;UACzBO,QAAQ,CAAC,CAAC,CAAC;UACXR,SAAS,CAAC,KAAK,CAAC;QAClB,CAAE;QAAA4B,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnB7C,OAAA;QAAQiD,OAAO,EAAEA,CAAA,KAAM9C,QAAQ,CAAC,GAAG,CAAE;QAAAsC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3C,EAAA,CA7EQD,QAAQ;EAAA,QACEN,WAAW,EACXC,WAAW;AAAA;AAAAsD,EAAA,GAFrBjD,QAAQ;AA+EjB,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}