{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import GameTimer from \"./Gametimer\";\n// import GameBoard from \"./GameBoard\";  // your mole grid component\n\n// const MOLE_COUNT = 9; // say you have 9 holes\n\n// function Game() {\n//   const [paused, setPaused] = useState(true);\n//   const [showMenu, setShowMenu] = useState(true);\n//   const [resetKey, setResetKey] = useState(0);\n//   const [started, setStarted] = useState(false);\n//   const [moles, setMoles] = useState(Array(MOLE_COUNT).fill(false));\n//   const [score, setScore] = useState(0);\n\n//   useEffect(() => {\n//     if (!paused) {\n//       const moleInterval = setInterval(() => {\n//         const nextMoles = Array(MOLE_COUNT).fill(false);\n//         const randomIndex = Math.floor(Math.random() * MOLE_COUNT);\n//         nextMoles[randomIndex] = true;\n//         setMoles(nextMoles);\n//       }, 1000);\n//       return () => clearInterval(moleInterval);\n//     } else {\n//       setMoles(Array(MOLE_COUNT).fill(false)); // hide moles if paused\n//     }\n//   }, [paused, resetKey]);\n\n//   const handleWhack = (index) => {\n//     if (moles[index]) {\n//       setScore((prev) => prev + 1);\n//       const newMoles = [...moles];\n//       newMoles[index] = false;\n//       setMoles(newMoles);\n//     }\n//   };\n\n//   function handleStart() {\n//     setPaused(false);\n//     setShowMenu(false);\n//     setStarted(true);\n//     setScore(0);\n//   }\n\n//   function handleResume() {\n//     setPaused(false);\n//     setShowMenu(false);\n//   }\n\n//   function handlePause() {\n//     setPaused(true);\n//     setShowMenu(true);\n//   }\n\n//   function handleRestart() {\n//     setResetKey((prev) => prev + 1);\n//     setPaused(false);\n//     setShowMenu(false);\n//     setStarted(true);\n//     setScore(0);\n//   }\n\n//   function handleTimeUp() {\n//     setPaused(true);\n//     setShowMenu(true);\n//     alert(Time is up! Your score: ${score});\n//   }\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <h2>Score: {score}</h2>\n//       <GameTimer\n//         startTime={30}\n//         paused={paused}\n//         resetTrigger={resetKey}\n//         onTimeUp={handleTimeUp}\n//       />\n\n//       {showMenu ? (\n//         <div style={{ marginTop: \"20px\" }}>\n//           <h2>{started ? \"Timer Paused\" : \"Timer Ready\"}</h2>\n//           {!started ? (\n//             <button onClick={handleStart}>Start</button>\n//           ) : (\n//             <>\n//               <button onClick={handleResume}>Resume</button>\n//               <button onClick={handleRestart} style={{ marginLeft: \"10px\" }}>\n//                 Restart\n//               </button>\n//             </>\n//           )}\n//         </div>\n//       ) : (\n//         <button onClick={handlePause} style={{ marginTop: \"20px\" }}>\n//           Pause\n//         </button>\n//       )}\n\n//       <GameBoard moles={moles} handleWhack={handleWhack} />\n//     </div>\n//   );\n// }\n\n// export default Game;","map":{"version":3,"names":[],"sources":["/home/wycliff/documents/react/whack-a-mole/src/Components/Pause.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import GameTimer from \"./Gametimer\";\n// import GameBoard from \"./GameBoard\";  // your mole grid component\n\n// const MOLE_COUNT = 9; // say you have 9 holes\n\n// function Game() {\n//   const [paused, setPaused] = useState(true);\n//   const [showMenu, setShowMenu] = useState(true);\n//   const [resetKey, setResetKey] = useState(0);\n//   const [started, setStarted] = useState(false);\n//   const [moles, setMoles] = useState(Array(MOLE_COUNT).fill(false));\n//   const [score, setScore] = useState(0);\n\n//   useEffect(() => {\n//     if (!paused) {\n//       const moleInterval = setInterval(() => {\n//         const nextMoles = Array(MOLE_COUNT).fill(false);\n//         const randomIndex = Math.floor(Math.random() * MOLE_COUNT);\n//         nextMoles[randomIndex] = true;\n//         setMoles(nextMoles);\n//       }, 1000);\n//       return () => clearInterval(moleInterval);\n//     } else {\n//       setMoles(Array(MOLE_COUNT).fill(false)); // hide moles if paused\n//     }\n//   }, [paused, resetKey]);\n\n//   const handleWhack = (index) => {\n//     if (moles[index]) {\n//       setScore((prev) => prev + 1);\n//       const newMoles = [...moles];\n//       newMoles[index] = false;\n//       setMoles(newMoles);\n//     }\n//   };\n\n//   function handleStart() {\n//     setPaused(false);\n//     setShowMenu(false);\n//     setStarted(true);\n//     setScore(0);\n//   }\n\n//   function handleResume() {\n//     setPaused(false);\n//     setShowMenu(false);\n//   }\n\n//   function handlePause() {\n//     setPaused(true);\n//     setShowMenu(true);\n//   }\n\n//   function handleRestart() {\n//     setResetKey((prev) => prev + 1);\n//     setPaused(false);\n//     setShowMenu(false);\n//     setStarted(true);\n//     setScore(0);\n//   }\n\n//   function handleTimeUp() {\n//     setPaused(true);\n//     setShowMenu(true);\n//     alert(Time is up! Your score: ${score});\n//   }\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <h2>Score: {score}</h2>\n//       <GameTimer\n//         startTime={30}\n//         paused={paused}\n//         resetTrigger={resetKey}\n//         onTimeUp={handleTimeUp}\n//       />\n\n//       {showMenu ? (\n//         <div style={{ marginTop: \"20px\" }}>\n//           <h2>{started ? \"Timer Paused\" : \"Timer Ready\"}</h2>\n//           {!started ? (\n//             <button onClick={handleStart}>Start</button>\n//           ) : (\n//             <>\n//               <button onClick={handleResume}>Resume</button>\n//               <button onClick={handleRestart} style={{ marginLeft: \"10px\" }}>\n//                 Restart\n//               </button>\n//             </>\n//           )}\n//         </div>\n//       ) : (\n//         <button onClick={handlePause} style={{ marginTop: \"20px\" }}>\n//           Pause\n//         </button>\n//       )}\n\n//       <GameBoard moles={moles} handleWhack={handleWhack} />\n//     </div>\n//   );\n// }\n\n// export default Game;\n\n\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}